import numpy as np
import matplotlib.pyplot as plt

# Define signal parameters
frequency = 1000  # Signal frequency in Hz
amplitude = 1  # Signal amplitude in V
sampling_rate = 100000  # Sampling rate in Hz
duration = 0.005  # Duration in seconds (5 ms)
time = np.linspace(0, duration, int(sampling_rate * duration))

# Generate the original sinusoidal signal
original_signal = amplitude * np.sin(2 * np.pi * frequency * time)

# Define the slew rate of the amplifier (V/s)
slew_rate = 2 * np.pi * frequency * amplitude * 0.5  # Example: 50% of the required SR

# Simulate the effect of the slew rate limit on the signal
distorted_signal = np.copy(original_signal)
for i in range(1, len(time)):
    # Calculate the difference between successive points
    delta_v = original_signal[i] - distorted_signal[i - 1]
    max_delta_v = slew_rate / sampling_rate
    
    # Limit the change to the maximum allowed by the slew rate
    if delta_v > max_delta_v:
        distorted_signal[i] = distorted_signal[i - 1] + max_delta_v
    elif delta_v < -max_delta_v:
        distorted_signal[i] = distorted_signal[i - 1] - max_delta_v
    else:
        distorted_signal[i] = original_signal[i]

# Plot the original and distorted signals
plt.figure(figsize=(10, 6))
plt.plot(time * 1000, original_signal, label='Original SIN Wave', linestyle='--', color='blue')
plt.plot(time * 1000, distorted_signal, label='Distorted Wave (Limited SR)', color='red')
plt.title('Effect of Insufficient Slew Rate on SIN Wave')
plt.xlabel('Time (ms)')
plt.ylabel('Amplitude (V)')
plt.grid(True)
plt.legend(loc='upper right')
plt.tight_layout()
plt.show()

import numpy as np

# 関数の定義
def f(x):
    return x**3 - x - 2

# 関数の導関数の定義
def df(x):
    return 3 * x**2 - 1

# ニュートン・ラフソン法の実装
def newton_raphson(x0, tol=1e-6, max_iter=100):
    x = x0
    for i in range(max_iter):
        x_new = x - f(x) / df(x)
        if abs(x_new - x) < tol:
            print(f"Converged in {i+1} iterations")
            return x_new
        x = x_new
    print("Did not converge")
    return None

# 初期値を設定して実行
initial_guess = 1.5
root = newton_raphson(initial_guess)
print("Root:", root)

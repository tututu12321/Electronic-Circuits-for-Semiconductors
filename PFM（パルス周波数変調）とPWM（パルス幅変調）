import numpy as np
import matplotlib.pyplot as plt

# 時間軸の設定
Fs = 10000  # サンプリング周波数
T = 0.01  # シミュレーション時間
t = np.linspace(0, T, int(Fs*T))

# PWM (Pulse Width Modulation) の設定
f_pwm = 500  # PWMキャリア周波数
duty_cycle_pwm = 0.4  # デューティ比
pwm_wave = 0.5 * (1 + np.sign(np.sin(2 * np.pi * f_pwm * t) - duty_cycle_pwm))

# PFM (Pulse Frequency Modulation) の設定
f_pfm = 500  # 初期周波数
modulation_index_pfm = 0.5  # 変調深度
pfm_wave = np.zeros_like(t)
for i in range(1, len(t)):
    period = 1 / (f_pfm + modulation_index_pfm * np.sin(2 * np.pi * 1 * t[i]))  # 周波数変調
    pfm_wave[i] = np.sign(np.sin(2 * np.pi * t[i] / period))  # パルス生成

# プロット
fig, axes = plt.subplots(2, 1, figsize=(10, 6))

# PWMの波形
axes[0].plot(t, pwm_wave, label='PWM', color='b')
axes[0].set_title('Pulse Width Modulation (PWM)')
axes[0].set_xlabel('Time [s]')
axes[0].set_ylabel('Amplitude')
axes[0].grid(True)

# PFMの波形
axes[1].plot(t, pfm_wave, label='PFM', color='r')
axes[1].set_title('Pulse Frequency Modulation (PFM)')
axes[1].set_xlabel('Time [s]')
axes[1].set_ylabel('Amplitude')
axes[1].grid(True)

plt.tight_layout()
plt.show()

import numpy as np
import matplotlib.pyplot as plt

# 1. インパルス応答 h(t) の定義 (Defining impulse response h(t))
def h(t):
    return np.exp(-t) * (t >= 0)  # h(t) = e^(-t) for t >= 0, 0 otherwise

# 2. 任意の入力信号 v(t) の定義 (Defining arbitrary input signal v(t))
def v(t):
    return np.sin(t) * (t >= 0)  # v(t) = sin(t) for t >= 0, 0 otherwise

# 3. 畳み込み演算の実行 (Performing convolution)
t = np.linspace(0, 10, 1000)  # 時間軸の定義 (Time axis)

# 畳み込みを計算 (Calculating convolution)
w = np.convolve(v(t), h(t), mode='same') * (t[1] - t[0])  # 畳み込みの計算 (Convolution with normalization)

# 4. 結果をプロット (Plotting results)
plt.figure(figsize=(10, 6))

plt.subplot(3, 1, 1)
plt.plot(t, v(t), label='v(t)', color='blue')
plt.title('Input Signal v(t)')
plt.grid(True)

plt.subplot(3, 1, 2)
plt.plot(t, h(t), label='h(t)', color='green')
plt.title('Impulse Response h(t)')
plt.grid(True)

plt.subplot(3, 1, 3)
plt.plot(t, w, label='w(t)', color='red')
plt.title('Output Signal w(t) = v(t) * h(t)')
plt.grid(True)

plt.tight_layout()
plt.show()

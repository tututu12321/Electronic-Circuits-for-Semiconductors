import numpy as np
import matplotlib.pyplot as plt

# パラメータ設定
fs = 1000  # サンプリング周波数 (Hz)
t = np.linspace(0, 0.1, fs)  # 0.1秒間の時間軸
f_ac = 50  # AC信号の周波数 (50Hz)
amplitude = 5  # AC信号の振幅 (V)
R = 1000  # 負荷抵抗 (オーム)
C = 0.0001  # 平滑用コンデンサ (F)

# AC信号の生成
ac_signal = amplitude * np.sin(2 * np.pi * f_ac * t)

# 整流 (半波整流)
rectified_signal = np.maximum(ac_signal, 0)

# コンデンサで平滑化
def smooth_signal(signal, R, C, fs):
    dt = 1 / fs
    V_out = np.zeros_like(signal)
    V_out[0] = signal[0]
    for i in range(1, len(signal)):
        dV = (signal[i] - V_out[i - 1]) / (R * C)
        V_out[i] = V_out[i - 1] + dV * dt
    return V_out

# 平滑化された信号を計算
smoothed_signal = smooth_signal(rectified_signal, R, C, fs)

# プロット
plt.figure(figsize=(12, 6))

# オリジナルのAC信号のプロット
plt.subplot(3, 1, 1)
plt.plot(t, ac_signal, label='AC Signal (50Hz)', color='blue')
plt.title('Original AC Signal')
plt.xlabel('Time (s)')
plt.ylabel('Voltage (V)')
plt.grid(True)
plt.legend()

# 整流後の信号のプロット
plt.subplot(3, 1, 2)
plt.plot(t, rectified_signal, label='Rectified Signal', color='red')
plt.title('Rectified Signal (Half-wave)')
plt.xlabel('Time (s)')
plt.ylabel('Voltage (V)')
plt.grid(True)
plt.legend()

# 平滑化された信号のプロット
plt.subplot(3, 1, 3)
plt.plot(t, smoothed_signal, label='Smoothed DC Signal', color='green')
plt.title('Smoothed DC Signal with Capacitor')
plt.xlabel('Time (s)')
plt.ylabel('Voltage (V)')
plt.grid(True)
plt.legend()

# レイアウト調整
plt.tight_layout()
plt.show()

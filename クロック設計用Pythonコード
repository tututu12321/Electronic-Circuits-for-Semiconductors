import numpy as np
import matplotlib.pyplot as plt

# シミュレーション設定
simulation_time = 1  # シミュレーション時間 (秒)
sampling_rate = 5000  # サンプリング周波数 (Hz)
time = np.linspace(0, simulation_time, int(simulation_time * sampling_rate), endpoint=False)  # 時間軸

# 各種パラメータ
ramp_start = 0  # ランプ波開始電圧 (V)
ramp_end = 1    # ランプ波終了電圧 (V)

clock_freq = 500  # クロック信号の周波数 (Hz)
sampling_clock_freq = 500 * 2  # サンプリングクロックの周波数 (Hz)

bias_voltage_value = 0.5  # バイアス電圧 (V)
signal_freq = 50  # サイン波の周波数 (Hz)

# ランプ波 (0Vから1V)
ramp_wave = ramp_start + (ramp_end - ramp_start) * (time % 1)  # ランプ波

# クロック信号 (周波数500Hz)
clock_signal = 0.5 * (1 + np.sign(np.sin(2 * np.pi * clock_freq * time)))  # 0から1Vの矩形波

# サンプリングクロック (500×2Hz)
sampling_clock = 0.5 * (1 + np.sign(np.sin(2 * np.pi * sampling_clock_freq * time)))  # 0から1Vの矩形波

# バイアス電圧0.5 + 0.5サイン波 (周波数50Hz)
bias_voltage = bias_voltage_value + 0.5 * np.sin(2 * np.pi * signal_freq * time)  # バイアス電圧

# プロット
plt.figure(figsize=(12, 8))

# ランプ波プロット
plt.subplot(4, 1, 1)
plt.plot(time, ramp_wave, label='Ramp Wave ')
plt.title('Ramp Wave')
plt.xlabel('Time [s]')
plt.ylabel('Voltage [V]')
plt.grid(True)

# クロック信号プロット
plt.subplot(4, 1, 2)
plt.plot(time, clock_signal, label='Clock Signal ', color='orange')
plt.title('Clock Signal')
plt.xlabel('Time [s]')
plt.ylabel('Voltage [V]')
plt.grid(True)

# サンプリングクロックプロット
plt.subplot(4, 1, 3)
plt.plot(time, sampling_clock, label='Sampling Clock', color='green')
plt.title('Sampling Clock')
plt.xlabel('Time [s]')
plt.ylabel('Voltage [V]')
plt.grid(True)

# バイアス電圧プロット
plt.subplot(4, 1, 4)
plt.plot(time, bias_voltage, label='BiasSIN Voltage', color='purple')
plt.title('Bias SIN Voltage')
plt.xlabel('Time [s]')
plt.ylabel('Voltage [V]')
plt.grid(True)

plt.tight_layout()
plt.show()
